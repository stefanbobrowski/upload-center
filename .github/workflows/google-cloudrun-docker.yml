name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: stefan-ai-training
  REGION: us-central1
  SERVICE: upload-center
  REPOSITORY: upload-center

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Create .env.production
        run: echo "VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}" > frontend/.env.production

      - name: Build and Push Docker image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          # ðŸš€ Bust Docker cache to avoid stale backend/frontend code
          docker build --no-cache -t $IMAGE .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars=NODE_ENV=production,\
            GCLOUD_PROJECT=${{ env.PROJECT_ID }},\
            GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }},\
            GCLOUD_LOCATION=${{ env.REGION }},\
            DB_USER=${{ secrets.DB_USER }},\
            DB_PASSWORD=${{ secrets.DB_PASSWORD }},\
            DB_NAME=${{ secrets.DB_NAME }},\
            DB_HOST=${{ secrets.DB_HOST }},\
            DB_PORT=${{ secrets.DB_PORT }},\
            INSTANCE_CONNECTION_NAME=${{ secrets.INSTANCE_CONNECTION_NAME }},\
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},\
            RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }},\
            VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }},\
            MAX_REQUESTS_PER_HOUR=${{ secrets.MAX_REQUESTS_PER_HOUR }}

